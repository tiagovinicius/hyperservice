---
apiVersion: v1
kind: Namespace
metadata:
  name: hyperservice
  labels:
    kuma.io/sidecar-injection: enabled
    kuma.io/mesh: default
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: hyperservice-svc-{{serviceName}}-config
  namespace: "{{namespace}}"
data:
  SERVICE_NAME: "{{serviceName}}"
  HYPERSERVICE_WORKDIR_PATH: "{{workdir}}"
  HYPERSERVICE_SERVE: "{{serve}}"
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: "{{serviceName}}"
  namespace: "{{namespace}}"
  labels:
    app: "{{serviceName}}"
spec:
  selector:
    matchLabels:
      app: "{{serviceName}}"
  template:
    metadata:
      labels:
        app: "{{serviceName}}"
    spec:
      subdomain: "{{serviceName}}"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: app.{{serviceName}}
                    operator: In
                    values:
                      - "true"
      containers:
        - name: "{{serviceName}}"
          image: "{{imageName}}"
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          envFrom:
            - configMapRef:
                name: hyperservice-svc-{{serviceName}}-env-var
          env:
            - name: KUMA_DPP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SERVICE_NAME
              valueFrom:
                configMapKeyRef:
                  name: hyperservice-svc-{{serviceName}}-config
                  key: SERVICE_NAME
            - name: HYPERSERVICE_WORKDIR_PATH
              valueFrom:
                configMapKeyRef:
                  name: hyperservice-svc-{{serviceName}}-config
                  key: HYPERSERVICE_WORKDIR_PATH
          volumeMounts:
            - name: docker-sock
              mountPath: /var/run/docker.sock
            - name: hyperservice-workspace
              mountPath: "{{workdir}}"
      volumes:
        - name: docker-sock
          hostPath:
            path: /var/run/docker.sock
            type: Socket
        - name: hyperservice-workspace
          hostPath:
            path: "{{workdir}}"
            type: Directory
---
apiVersion: v1
kind: Service
metadata:
  name: "{{serviceName}}"
  namespace: "{{namespace}}"
  labels:
    app: "{{serviceName}}"
spec:
  selector:
    app: "{{serviceName}}"
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  type: NodePort
